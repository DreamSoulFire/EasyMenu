plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '+'
}

group = 'pers.soulflame'
version = '1.0.4'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = 'CodeMC'
        url = 'https://repo.codemc.io/repository/maven-public/'
    }
    maven {
        name = 'PlaceholderAPI'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = 'NeigeItems'
        url = 'https://r.irepo.space/maven/'
    }
    maven {
        name = 'VaultAPI'
        url = 'https://jitpack.io'
    }
    maven {
        name = 'PlayerPoints'
        url = 'https://repo.rosewooddev.io/repository/public/'
    }
}

dependencies {
    compileOnly 'me.clip:placeholderapi:+'
    compileOnly 'org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT'
    compileOnly 'pers.neige.neigeitems:NeigeItems:+'
    compileOnly 'com.github.MilkBowl:VaultAPI:+'
    compileOnly 'org.black_ixx:playerpoints:+'
    implementation 'org.openjdk.nashorn:nashorn-core:+'
}

def targetJavaVersion = 17

java {
    def javaVersion = JavaVersion.toVersion targetJavaVersion
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

shadowJar {
    relocate('org.objectweb.asm', 'easymenu.org.objectweb.asm')
    relocate('org.openjdk.nashorn', 'easymenu.org.openjdk.nashorn')
    archiveClassifier.set("active")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
    failOnError = false
}

build {
    dependsOn shadowJar
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.javadoc {
    destinationDir(file("./docs"))
}